{"ast":null,"code":"var _jsxFileName = \"/Users/jashwinacharya/Desktop/Javascript Projects/youtube_clone/src/components/SearchFeed.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport { Videos } from \"./\";\nimport { fetchFromAPI } from \"../utils/fetchFromAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchFeed = () => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState(\"New\");\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    fetchFromAPI(`search?part=snippet&q=${selectedCategory}`).then(data => setVideos(data.items));\n  }, [selectedCategory]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 2,\n    sx: {\n      overflowY: \"auto\",\n      height: \"90vh\",\n      flex: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      fontWeight: \"bold\",\n      mb: 2,\n      sx: {\n        color: \"white\"\n      },\n      children: [selectedCategory, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"#FC1503\"\n        },\n        children: \"videos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Videos, {\n      videos: videos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchFeed, \"SpmoPQK02Ndm/5xDFhA00n8F0Po=\");\n_c = SearchFeed;\nexport default SearchFeed;\nvar _c;\n$RefreshReg$(_c, \"SearchFeed\");","map":{"version":3,"names":["useState","useEffect","Box","Typography","Videos","fetchFromAPI","SearchFeed","selectedCategory","setSelectedCategory","videos","setVideos","then","data","items","overflowY","height","flex","color"],"sources":["/Users/jashwinacharya/Desktop/Javascript Projects/youtube_clone/src/components/SearchFeed.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport { Videos } from \"./\";\nimport { fetchFromAPI } from \"../utils/fetchFromAPI\";\n\nconst SearchFeed = () => {\n  const [selectedCategory, setSelectedCategory] = useState(\"New\");\n  const [videos, setVideos] = useState([]);\n\n  useEffect(() => {\n    fetchFromAPI(`search?part=snippet&q=${selectedCategory}`).then((data) =>\n      setVideos(data.items)\n    );\n  }, [selectedCategory]);\n\n  return (\n    <Box p={2} sx={{ overflowY: \"auto\", height: \"90vh\", flex: 2 }}>\n      <Typography variant=\"h4\" fontWeight=\"bold\" mb={2} sx={{ color: \"white\" }}>\n        {selectedCategory} <span style={{ color: \"#FC1503\" }}>videos</span>\n      </Typography>\n      <Videos videos={videos} />\n    </Box>\n  );\n};\n\nexport default SearchFeed;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAC/C,SAASC,MAAM,QAAQ,IAAI;AAC3B,SAASC,YAAY,QAAQ,uBAAuB;AAAC;AAErD,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdI,YAAY,CAAE,yBAAwBE,gBAAiB,EAAC,CAAC,CAACI,IAAI,CAAEC,IAAI,IAClEF,SAAS,CAACE,IAAI,CAACC,KAAK,CAAC,CACtB;EACH,CAAC,EAAE,CAACN,gBAAgB,CAAC,CAAC;EAEtB,oBACE,QAAC,GAAG;IAAC,CAAC,EAAE,CAAE;IAAC,EAAE,EAAE;MAAEO,SAAS,EAAE,MAAM;MAAEC,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAE,CAAE;IAAA,wBAC5D,QAAC,UAAU;MAAC,OAAO,EAAC,IAAI;MAAC,UAAU,EAAC,MAAM;MAAC,EAAE,EAAE,CAAE;MAAC,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAA,WACtEV,gBAAgB,oBAAE;QAAM,KAAK,EAAE;UAAEU,KAAK,EAAE;QAAU,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc;IAAA;MAAA;MAAA;MAAA;IAAA,QACxD,eACb,QAAC,MAAM;MAAC,MAAM,EAAER;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACtB;AAEV,CAAC;AAAC,GAlBIH,UAAU;AAAA,KAAVA,UAAU;AAoBhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}